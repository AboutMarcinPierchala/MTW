@inject IDeleteInventoryUseCase DeleteInventoryUseCase
@inject NavigationManager NavigationManager
@if(inventory is not null)
{
    <tr>
        <td>@inventory.InventoryName</td>
        <td>@inventory.Price PLN</td>
        <td>@inventory.Quantity</td>
        <td>@(@inventory.Price * @inventory.Quantity) PLN</td>
        <td>
            <a class="btn btn-light"
                    type="button"
            href="/editinventory/@inventory.InventoryId">
                EDIT
            </a>
        </td>
        <td>
            <EditForm Enhance="true" Model="inventory"
                FormName="@($"form-del-inv-{inventory.InventoryId}")"
            OnSubmit="() => DeleteInventory(inventory.InventoryId)">
                <button type="submit" class="btn btn-danger">DELETE</button>
            </EditForm>
        </td>
    </tr>
}

@code {
    [Parameter]
    public Inventory? inventory { get; set; }

    private async Task DeleteInventory(int id)
    {
        await DeleteInventoryUseCase.ExecuteAsync(id);
        NavigationManager.Refresh();
    }
}
