<SearchProductInventoriesComponent OnInventorySelected="HandleInventoryToAddSelected"></SearchProductInventoriesComponent>
@if (this.Product is not null &&
              this.Product.ProductInventories is not null &&
            this.Product.ProductInventories.Count > 0)
{
    
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Quantity</th>
                    <th></th>
                </tr>                
            </thead>
            <tbody>
                @foreach (var item in Product.ProductInventories)
                {
                    <tr>
                        <td>
                            @item.Inventory?.InventoryName
                        </td>
                        <td>
                            <input type="number" min="0" @bind-value="item.InventoryQuantity" />
                        </td>
                        <td>
                            <button type="button"
                                class="btn btn-danger"
                                @onclick="()=>RemoveInventoryFromProduct(item)">
                            REMOVE
                        </button>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    }
}




@code {
    [Parameter]
    public Product? Product { get; set; }

    private void RemoveInventoryFromProduct(ProductInventory inventory)
    {
        this.Product?.RemoveInventoryFromProduct(inventory);
    }

    private void HandleInventoryToAddSelected(Inventory inventory)
    {
        this.Product?.AddInventory(inventory);
    }
}
