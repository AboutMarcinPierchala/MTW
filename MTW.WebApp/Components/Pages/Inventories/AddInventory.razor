@page "/addinventory"

@inject IAddInventoryUseCase AddInventoryUseCase
@inject NavigationManager NavigationManager

<h3>Add new inventory</h3>
<br />
<br />
<EditForm Model="inventory" FormName="formInventoryParams" OnValidSubmit="Save">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText 
                    id="name"
                   @bind-Value="inventory.InventoryName"
                   class="form-control">
        </InputText>
    </div>
    <div class="form-group">
        <label for="price">Inventory Price</label>
        <InputNumber id="price"
                     @bind-Value="inventory.Price"
                     class="form-control">
        </InputNumber>
    </div>
    <div class="form-group">
        <label for="quantity">Inventory Quantity</label>
        <InputNumber id="quantity"
                     @bind-Value="inventory.Quantity"
                     class="form-control">
        </InputNumber>
    </div>
    <br />
    <button type="submit" class="btn btn-danger">Save</button>
    <a href="/inventoryList" type="button" class="btn btn-secondary">Cancel</a>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private Inventory inventory { get; set; } = new();
    private async Task Save()
    {
        await AddInventoryUseCase.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventoryList");
    }
}
