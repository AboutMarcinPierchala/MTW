@page "/editInventory/{id:int}"
@using MTW.Plugins.InMemory
@using MTW.UseCases.PluginInterfaces
@inject IEditInventoryUseCase EditInventoryUseCase
@inject IInventoryRepository InventoryRepository
@inject NavigationManager NavigationManager 

<h3>Edit Inventory</h3>

<br />
<br />
@if(this.inventory is not null)
{
    <EditForm Model="inventory" FormName="formInventoryEditParams" OnValidSubmit="Edit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <InputNumber @bind-Value="inventory.InventoryId" hidden></InputNumber>
        <div class="form-group">
            <label for="name">Inventory Name</label>
            <InputText id="name"
                       @bind-Value="inventory.InventoryName"
                       class="form-control">
            </InputText>
        </div>
        <div class="form-group">
            <label for="price">Inventory Price</label>
            <InputNumber id="price"
                         @bind-Value="inventory.Price"
                         class="form-control">
            </InputNumber>
        </div>
        <div class="form-group">
            <label for="quantity">Inventory Quantity</label>
            <InputNumber id="quantity"
                         @bind-Value="inventory.Quantity"
                         class="form-control">
            </InputNumber>
        </div>
        <br />
        <button type="submit" class="btn btn-danger">Save</button>
        <a href="/inventoryList" type="button" class="btn btn-secondary">Cancel</a>
    </EditForm>
}

@code {

    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    private Inventory? inventory { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        inventory ??= await InventoryRepository.GetInventoryByIdAsync(this.Id);
    }

    private async Task Edit()
    {
        if(inventory is not null)
        {
            await EditInventoryUseCase.ExecuteAsync(this.Id, inventory);
        }        
        NavigationManager.NavigateTo("/inventoryList");
    }
}
